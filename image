whatever your image(cenos) conatains will reflect to your container 
eg., date cmd, ifconfig command etc.

Benefits-
    - you can set up your own custom container in image
    - we can't share the containr but can share the image
    - whatever set-up i do in a container i can share with others by creating the image
    - you can clone your container into an image

Their are two ways to create a custom image = @1 commit, @2code

1. Commit
    # docker commit (container name ) (your owm image name and version) 
eg., # docker commit myos1 lwimage:v1        //you can create yur own image & using that image you can also launch the container

    # docker run -it lwimage:v1
*(* we mostly dont use commit cammand because it dose not provide much facility 


2. Code (Docker File)

FROM centos:7    //with the help of from keyword you are telling to the code that you have to create a image base image i want to use from centos
                    from this image launch a comntainer
RUN mkdir /lwdir                //on this container create a directory  
RUN touch /lwdir/bb                //inside this directory i want to create a file        **his are the linux commands you want tell docker this are the commands to perform use RUM keyword
RUN yum install net-tools -y                            // after trhis i want to install software

# docker build --file (file name in which you save the code also give the path)  --tag (image name you want to give)    
eg., #docker build -f myc /code/ -t mylwnew:mytag1  
why use .(dot)= means whereve you are stay their means current folder
fail=1
pass=0

In the automation you have to use not ineractive command (eg., yum install net-tools -y)


Dockerfile
FROM centos:7
WORKDIR /var/www/html
COPY data/linux.txt home.html
RUN echo vimal daga > hi.html // run commnad always come in last
CMD httpd    // RUN command use for the build time and CMD command use for the run time

********************************************************************************************************************
Key Words
    - FORMis a keyword in the code file to tell about the base image
    - RUNis a keyword in the code file for running the commands
    - Dockerbuildcommand is used to create the image from the code file 
        -t    to tag image 
        -f    for file name 
        .   for the current directory or path
    - WORKDIRis a keyword in the docker file to set the current working directory
    - Docker cpcommand is used to copy files from the base system to the container 
        Command:-docker cp (file name )  (Container name: Path )
    - COPY keyword is used for copying the files from the base system to the image
    - If we have to run the command at build time we have to use the RUNkeyword in the docker file 
        If we have to run the command at runtimewe have to use CMD / ENTRYPOINTkeyword in the docker file
**********************************************************************************************************************
How to save the image # docker save (image name) -o (file name.tar)
    eg., # docker save myh:v1 -o myweb.tar
                                        //.tar for archive file

How can you use the save command (share on email, put on pendrive, download, etc..)
    # docker load -i myweb.tar    //the Image will download in the system
